                 -1   	$MODDE0CV ; Sets some sort of mode
0000              1   ;  MODDDE2: Register definition for DE2-8052 softcore
0000              2   ;
0000              3   ;   Copyright (C) 2011  Jesus Calvino-Fraga, jesusc at ece.ubc.ca
0000              4   ;
0000              5   ;   This library is free software; you can redistribute it and/or
0000              6   ;   modify it under the terms of the GNU Lesser General Public
0000              7   ;   License as published by the Free Software Foundation; either
0000              8   ;   version 2.1 of the License, or (at your option) any later version.
0000              9   ;
0000             10   ;   This library is distributed in the hope that it will be useful,
0000             11   ;   but WITHOUT ANY WARRANTY; without even the implied warranty of
0000             12   ;   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
0000             13   ;   Lesser General Public License for more details.
0000             14   ;
0000             15   ;   You should have received a copy of the GNU Lesser General Public
0000             16   ;   License along with this library; if not, write to the Free Software
0000             17   ;   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
0000             18   ;
0000             19       
0000             20   P0     DATA  080H  ;PORT 0
0000             21   SP     DATA  081H  ;STACK POINTER
0000             22   DPL    DATA  082H  ;DATA POINTER 0 - LOW BYTE
0000             23   DPH    DATA  083H  ;DATA POINTER 0 - HIGH BYTE
0000             24   DPL1   DATA  084H  ;DATA POINTER 1 - LOW BYTE
0000             25   DPH1   DATA  085H  ;DATA POINTER 1 - HIGH BYTE
0000             26   DPS    DATA  086H  ;DATA POINTER SELECT. DPH1, DPL1 active when DPS.0=1
0000             27   PCON   DATA  087H  ;POWER CONTROL
0000             28   TCON   DATA  088H  ;TIMER CONTROL
0000             29   TMOD   DATA  089H  ;TIMER MODE
0000             30   TL0    DATA  08AH  ;TIMER 0 - LOW BYTE
0000             31   TL1    DATA  08BH  ;TIMER 1 - LOW BYTE
0000             32   TH0    DATA  08CH  ;TIMER 0 - HIGH BYTE
0000             33   TH1    DATA  08DH  ;TIMER 1 - HIGH BYTE
0000             34   P1     DATA  090H  ;PORT 1
0000             35   SCON   DATA  098H  ;SERIAL PORT CONTROL
0000             36   SBUF   DATA  099H  ;SERIAL PORT BUFFER
0000             37   P2     DATA  0A0H  ;PORT 2
0000             38   IE     DATA  0A8H  ;INTERRUPT ENABLE
0000             39   P3     DATA  0B0H  ;PORT 3
0000             40   IP     DATA  0B8H  ;INTERRUPT PRIORITY
0000             41   T2CON  DATA  0C8H  ;TIMER 2 CONTROL
0000             42   T2MOD  DATA  0C9H  ;TIMER 2 MODE
0000             43   RCAP2L DATA  0CAH  ;TIMER 2 CAPTURE REGISTER - LOW BYTE
0000             44   RCAP2H DATA  0CBH  ;TIMER 2 CAPTURE REGISTER - HIGH BYTE
0000             45   TL2    DATA  0CCH  ;TIMER 2 - LOW BYTE
0000             46   TH2    DATA  0CDH  ;TIMER 2 - HIGH BYTE
0000             47   PSW    DATA  0D0H  ;PROGRAM STATUS WORD
0000             48   ACC    DATA  0E0H  ;ACCUMULATOR
0000             49   B      DATA  0F0H  ;MULTIPLICATION REGISTER
0000             50   IT0    BIT   088H  ;TCON.0 - EXT. INTERRUPT 0 TYPE
0000             51   IE0    BIT   089H  ;TCON.1 - EXT. INTERRUPT 0 EDGE FLAG
0000             52   IT1    BIT   08AH  ;TCON.2 - EXT. INTERRUPT 1 TYPE
0000             53   IE1    BIT   08BH  ;TCON.3 - EXT. INTERRUPT 1 EDGE FLAG
0000             54   TR0    BIT   08CH  ;TCON.4 - TIMER 0 ON/OFF CONTROL
0000             55   TF0    BIT   08DH  ;TCON.5 - TIMER 0 OVERFLOW FLAG
0000             56   TR1    BIT   08EH  ;TCON.6 - TIMER 1 ON/OFF CONTROL
0000             57   TF1    BIT   08FH  ;TCON.7 - TIMER 1 OVERFLOW FLAG
0000             58   RI     BIT   098H  ;SCON.0 - RECEIVE INTERRUPT FLAG
0000             59   TI     BIT   099H  ;SCON.1 - TRANSMIT INTERRUPT FLAG
0000             60   RB8    BIT   09AH  ;SCON.2 - RECEIVE BIT 8
0000             61   TB8    BIT   09BH  ;SCON.3 - TRANSMIT BIT 8
0000             62   REN    BIT   09CH  ;SCON.4 - RECEIVE ENABLE
0000             63   SM2    BIT   09DH  ;SCON.5 - SERIAL MODE CONTROL BIT 2
0000             64   SM1    BIT   09EH  ;SCON.6 - SERIAL MODE CONTROL BIT 1
0000             65   SM0    BIT   09FH  ;SCON.7 - SERIAL MODE CONTROL BIT 0
0000             66   EX0    BIT   0A8H  ;IE.0 - EXTERNAL INTERRUPT 0 ENABLE
0000             67   ET0    BIT   0A9H  ;IE.1 - TIMER 0 INTERRUPT ENABLE
0000             68   EX1    BIT   0AAH  ;IE.2 - EXTERNAL INTERRUPT 1 ENABLE
0000             69   ET1    BIT   0ABH  ;IE.3 - TIMER 1 INTERRUPT ENABLE
0000             70   ES     BIT   0ACH  ;IE.4 - SERIAL PORT INTERRUPT ENABLE
0000             71   ET2    BIT   0ADH  ;IE.5 - TIMER 2 INTERRUPT ENABLE
0000             72   EA     BIT   0AFH  ;IE.7 - GLOBAL INTERRUPT ENABLE
0000             73   RXD    BIT   0B0H  ;P3.0 - SERIAL PORT RECEIVE INPUT
0000             74   TXD    BIT   0B1H  ;P3.1 - SERIAL PORT TRANSMIT OUTPUT
0000             75   INT0   BIT   0B2H  ;P3.2 - EXTERNAL INTERRUPT 0 INPUT
0000             76   INT1   BIT   0B3H  ;P3.3 - EXTERNAL INTERRUPT 1 INPUT
0000             77   T0     BIT   0B4H  ;P3.4 - TIMER 0 COUNT INPUT
0000             78   T1     BIT   0B5H  ;P3.5 - TIMER 1 COUNT INPUT
0000             79   WR     BIT   0B6H  ;P3.6 - WRITE CONTROL FOR EXT. MEMORY
0000             80   RD     BIT   0B7H  ;P3.7 - READ CONTROL FOR EXT. MEMORY
0000             81   PX0    BIT   0B8H  ;IP.0 - EXTERNAL INTERRUPT 0 PRIORITY
0000             82   PT0    BIT   0B9H  ;IP.1 - TIMER 0 PRIORITY
0000             83   PX1    BIT   0BAH  ;IP.2 - EXTERNAL INTERRUPT 1 PRIORITY
0000             84   PT1    BIT   0BBH  ;IP.3 - TIMER 1 PRIORITY
0000             85   PS     BIT   0BCH  ;IP.4 - SERIAL PORT PRIORITY
0000             86   PT2    BIT   0BDH  ;IP.5 - TIMER 2 PRIORITY
0000             87   CAP2   BIT   0C8H  ;T2CON.0 - CAPTURE OR RELOAD SELECT
0000             88   CNT2   BIT   0C9H  ;T2CON.1 - TIMER OR COUNTER SELECT
0000             89   TR2    BIT   0CAH  ;T2CON.2 - TIMER 2 ON/OFF CONTROL
0000             90   EXEN2  BIT   0CBH  ;T2CON.3 - TIMER 2 EXTERNAL ENABLE FLAG
0000             91   TCLK   BIT   0CCH  ;T2CON.4 - TRANSMIT CLOCK SELECT
0000             92   RCLK   BIT   0CDH  ;T2CON.5 - RECEIVE CLOCK SELECTT
0000             93   EXF2   BIT   0CEH  ;T2CON.6 - EXTERNAL TRANSITION FLAG
0000             94   TF2    BIT   0CFH  ;T2CON.7 - TIMER 2 OVERFLOW FLAG
0000             95   P      BIT   0D0H  ;PSW.0 - ACCUMULATOR PARITY FLAG
0000             96   OV     BIT   0D2H  ;PSW.2 - OVERFLOW FLAG
0000             97   RS0    BIT   0D3H  ;PSW.3 - REGISTER BANK SELECT 0
0000             98   RS1    BIT   0D4H  ;PSW.4 - REGISTER BANK SELECT 1
0000             99   F0     BIT   0D5H  ;PSW.5 - FLAG 0
0000            100   AC     BIT   0D6H  ;PSW.6 - AUXILIARY CARRY FLAG
0000            101   CY     BIT   0D7H  ;PSW.7 - CARRY FLAG
0000            102   
0000            103   ; For the altera DE2 configured with an 8051/8052 softcore processor
0000            104   ; we have the following extra registers:
0000            105   
0000            106   HEX0   DATA  091H ; Zero turns the segment on
0000            107   HEX1   DATA  092H ; 
0000            108   HEX2   DATA  093H ; 
0000            109   HEX3   DATA  094H ; 
0000            110   HEX4   DATA  08EH ;
0000            111   HEX5   DATA  08FH ;
0000            112   HEX6   DATA  096H ;
0000            113   HEX7   DATA  097H ;
0000            114   
0000            115   P0MOD  DATA  09AH ; Input/output mode bits for port 0.  '1' sets the port to output mode.
0000            116   P1MOD  DATA  09BH ; Input/output mode bits for port 1
0000            117   P2MOD  DATA  09CH ; Input/output mode bits for port 2
0000            118   P3MOD  DATA  09DH ; Input/output mode bits for port 3
0000            119   
0000            120   LEDRA  DATA  0E8H ; LEDs LEDR0 to LEDR7 (bit addressable, ex: LEDRA.1 for LEDR1)
0000            121   LEDRB  DATA  095H ; LEDs LEDR8 to LEDR15
0000            122   LEDRC  DATA  09EH ; LEDs LEDR16, LEDR15, and LEDG8
0000            123   LEDG   DATA  0F8H ; LEDs LEDG0 to LEDG7 (bit addressable, ex: LEDG.3 for LEDG3)
0000            124   SWA    DATA  0E8H ; Switches SW0 to SW7 (bit addressable, ex: SWA.1 for SW1)
0000            125   SWB    DATA  095H ; Switches SW8 to SW15
0000            126   SWC    DATA  09EH ; Switches SW16 and SW17
0000            127   KEY    DATA  0F8H ; KEY1=KEY.1, KEY2=KEY.2, KEY3=KEY.3.  KEY0 is the reset button! 
0000            128   
0000            129   LCD_CMD   DATA 0D8H ;
0000            130   LCD_DATA  DATA 0D9H ;
0000            131   LCD_MOD   DATA 0DAH ; Write 0xff to make LCD_DATA an output
0000            132   LCD_RW    BIT  0D8H ; '0' writes to LCD
0000            133   LCD_EN    BIT  0D9H ; Toggle from '1' to '0'
0000            134   LCD_RS    BIT  0DAH ; '0' for commands, '1' for data
0000            135   LCD_ON    BIT  0DBH ; Write '1' to power the LCD
0000            136   LCD_BLON  BIT  0DCH ; Write '1' to turn on back light
0000            137   
0000            138   FLASH_CMD  data 0DBH ; The control bits of the flash memory:
0000            139   ; bit 0: FL_RST_N  Set to 1 for normal operation
0000            140   ; bit 1: FL_WE_N
0000            141   ; bit 2: FL_OE_N
0000            142   ; bit 3: FL_CE_N
0000            143   FLASH_DATA data 0DCH ; 8-bit data bus of flash memory.
0000            144   FLASH_MOD  data 0DDH ; 0xff makes FLASH_DATA output.  0x00 makes FLASH_DATA input.
0000            145   FLASH_ADD0 data 0E1H ; address bits 0 to 7.
0000            146   FLASH_ADD1 data 0E2H ; address bits 8 to 15.
0000            147   FLASH_ADD2 data 0E3H ; address bits 16 to 21.
0000            148   
0000              2            ; The display format depends on the states of switches SW2 down to SW0 after
0000              3            ; they are latched by pressing pushbutton ‘KEY3’. In all the examples it is assumed that
0000              4            ; the student number is “12345678”. 
0000              5   
0000              6            ; Define student number
0000              7   N_2 equ 10100100b
0000              8   N_6 equ 10000010b
0000              9   N_9 equ 10011000b
0000             10   N_5 equ 10010010b
0000             11   N_1 equ 11111001b
0000             12   N_0 equ 11000000b
0000             13   N_3 equ 10110000b
0000             14   BLANK equ 11111111b
0000             15   L_E equ 10000110b
0000             16   N_4 equ 10011001b
0000             17   L_D equ 10100001b
0000             18   L_A equ 10001000b
0000             19   L_C equ 11000110b
0000             20   L_H equ 10001001b
0000             21   L_L equ 11001111b
0000             22   L_O equ 11000000b
0000             23   L_P equ 10001100b
0000             24   L_N equ 10101011b
0000             25   
0000             26   org 0
0000 020003      27            ljmp init
0003             28            
0003             29   init:
0003 75817F      30            mov SP, #0x7f ; Initialize the stack
0006 120059      31            lcall case_000
0009 120049      32            lcall wait_1_sec
000C             33            
000C             34   set_state:
000C             35            ; Call different functions based on the latching of SW2 down to SW0
000C 20FB06      36            jb KEY.3, cont ; jump if 1 (key is not pressed)
000F             37            ; set new command (state of switches) into R1
000F A8E8        38            mov R0, SWA
0011 E8          39            mov A, R0 ; need to invert buttons since they are active low
0012             40            ;cpl A
0012 F8          41            mov R0, A
0013 88E8        42            mov LEDRA, R0
0015             43   cont:
0015 E8          44            mov A, R0
0016             45            ; Execute last command
0016 B40003      46            CJNE A, #0, cc1 ; branches to the specified destination if their values are not equal
0019 120059      47            lcall case_000
001C             48   cc1: 
001C B40103      49            CJNE A, #1, cc2
001F 12006C      50            lcall case_001
0022             51   cc2: 
0022 B40203      52            CJNE A, #2, cc3
0025 12007F      53            lcall case_010
0028             54   cc3: 
0028 B40303      55            CJNE A, #3, cc4
002B 120128      56            lcall case_011
002E             57   cc4: 
002E B40403      58            CJNE A, #4, cc5
0031 1201D1      59            lcall case_100
0034             60   cc5: 
0034 B40503      61            CJNE A, #5, cc6
0037 1201FC      62            lcall case_101
003A             63   cc6: 
003A B40603      64            CJNE A, #6, cc7
003D 120290      65            lcall case_110
0040             66   cc7: 
0040 B40703      67            CJNE A, #7, other
0043 1202C1      68            lcall case_111
0046             69   other:
0046 12000C      70            lcall set_state
0049             71            
0049             72   wait_1_sec:
0049 7BB4        73       mov R3, #180  ; 90 is 5AH
004B 7AFA        74   L3: mov R2, #250 ; 250 is FAH 
004D 79FA        75   L2: mov R1, #250
004F D9FE        76   L1: djnz R1, L1  ; 3 machine cycles-> 3*30ns*250=22.5us
0051 30FBB8      77            jnb KEY.3, set_state ; if the key is pressed jump immediately back to the main loop
0054 DAF7        78       djnz R2, L2  ; 22.5us*250=5.625ms
0056 DBF3        79       djnz R3, L3  ; 5.625ms*180=1s (approximately)
0058 22          80            ret
0059             81   
0059             82   case_000:
0059             83            ; Display the six most significant digits of your student number using HEX5 down to
0059             84            ; HEX0. For example: “123456” 
0059 758FA4      85            mov HEX5, #N_2
005C 758E82      86            mov HEX4, #N_6
005F 759498      87            mov HEX3, #N_9
0062 759392      88            mov HEX2, #N_5
0065 7592F9      89            mov HEX1, #N_1
0068 7591F9      90            mov HEX0, #N_1
006B 22          91            ret
006C             92   
006C             93   
006C             94   case_001:
006C             95            ; Display the two least significant digits of your student number using HEX1 and
006C             96            ; HEX0. Keep HEX5 down to HEX2 blank. For example: “ 78”
006C 758FFF      97            mov HEX5, #BLANK
006F 758EFF      98            mov HEX4, #BLANK
0072 7594FF      99            mov HEX3, #BLANK
0075 7593FF     100            mov HEX2, #BLANK
0078 759282     101            mov HEX1, #N_6
007B 7591C0     102            mov HEX0, #N_0
007E 22         103            ret
007F            104   
007F            105   case_010:
007F            106            ;  Starting with the six most significant digits of your student number, scroll one digit
007F            107            ; to the left every second. This should keep going forever until the selection for SW2
007F            108            ; down to SW0 is changed. For example: “123456”, “234567”, “345678”, “456781”,
007F            109            ; “567812”, “678123”, etc. 
007F 758FA4     110            mov HEX5, #N_2
0082 758E82     111            mov HEX4, #N_6
0085 759498     112            mov HEX3, #N_9
0088 759392     113            mov HEX2, #N_5
008B 7592F9     114            mov HEX1, #N_1
008E 7591F9     115            mov HEX0, #N_1
0091 120049     116            lcall wait_1_sec
0094 758F82     117            mov HEX5, #N_6
0097 758E98     118            mov HEX4, #N_9
009A 759492     119            mov HEX3, #N_5
009D 7593F9     120            mov HEX2, #N_1
00A0 7592F9     121            mov HEX1, #N_1
00A3 759182     122            mov HEX0, #N_6
00A6 120049     123            lcall wait_1_sec
00A9 758F98     124            mov HEX5, #N_9
00AC 758E92     125            mov HEX4, #N_5
00AF 7594F9     126            mov HEX3, #N_1
00B2 7593F9     127            mov HEX2, #N_1
00B5 759282     128            mov HEX1, #N_6
00B8 7591C0     129            mov HEX0, #N_0
00BB 120049     130            lcall wait_1_sec
00BE 758F92     131            mov HEX5, #N_5
00C1 758EF9     132            mov HEX4, #N_1
00C4 7594F9     133            mov HEX3, #N_1
00C7 759382     134            mov HEX2, #N_6
00CA 7592C0     135            mov HEX1, #N_0
00CD 7591A4     136            mov HEX0, #N_2
00D0 120049     137            lcall wait_1_sec
00D3 758FF9     138            mov HEX5, #N_1
00D6 758EF9     139            mov HEX4, #N_1
00D9 759482     140            mov HEX3, #N_6
00DC 7593C0     141            mov HEX2, #N_0
00DF 7592A4     142            mov HEX1, #N_2
00E2 759182     143            mov HEX0, #N_6
00E5 120049     144            lcall wait_1_sec
00E8 758FF9     145            mov HEX5, #N_1
00EB 758E82     146            mov HEX4, #N_6
00EE 7594C0     147            mov HEX3, #N_0
00F1 7593A4     148            mov HEX2, #N_2
00F4 759282     149            mov HEX1, #N_6
00F7 759198     150            mov HEX0, #N_9
00FA 120049     151            lcall wait_1_sec
00FD 758F82     152            mov HEX5, #N_6
0100 758EC0     153            mov HEX4, #N_0
0103 7594A4     154            mov HEX3, #N_2
0106 759382     155            mov HEX2, #N_6
0109 759298     156            mov HEX1, #N_9
010C 759192     157            mov HEX0, #N_5
010F 120049     158            lcall wait_1_sec
0112 758FC0     159            mov HEX5, #N_0
0115 758EA4     160            mov HEX4, #N_2
0118 759482     161            mov HEX3, #N_6
011B 759398     162            mov HEX2, #N_9
011E 759292     163            mov HEX1, #N_5
0121 7591F9     164            mov HEX0, #N_1
0124 120049     165            lcall wait_1_sec
0127 22         166            ret
0128            167   
0128            168   case_011:
0128            169            ; Starting with the six most significant digits of your student number, scroll the digits
0128            170            ; of your student number one digit to the right every second. This should keep going
0128            171            ; forever until the selection for SW2 down to SW0 is changed. For example: “123456”,
0128            172            ; “812345”, “781234”, “678123”, “567812”, “456781”, etc. 
0128 758FA4     173            mov HEX5, #N_2
012B 758E82     174            mov HEX4, #N_6
012E 759498     175            mov HEX3, #N_9
0131 759392     176            mov HEX2, #N_5
0134 7592F9     177            mov HEX1, #N_1
0137 7591F9     178            mov HEX0, #N_1
013A 120049     179            lcall wait_1_sec
013D 758FC0     180            mov HEX5, #N_0
0140 758EA4     181            mov HEX4, #N_2
0143 759482     182            mov HEX3, #N_6
0146 759398     183            mov HEX2, #N_9
0149 759292     184            mov HEX1, #N_5
014C 7591F9     185            mov HEX0, #N_1
014F 120049     186            lcall wait_1_sec
0152 758F82     187            mov HEX5, #N_6
0155 758EC0     188            mov HEX4, #N_0
0158 7594A4     189            mov HEX3, #N_2
015B 759382     190            mov HEX2, #N_6
015E 759298     191            mov HEX1, #N_9
0161 759192     192            mov HEX0, #N_5
0164 120049     193            lcall wait_1_sec
0167 758FF9     194            mov HEX5, #N_1
016A 758E82     195            mov HEX4, #N_6
016D 7594C0     196            mov HEX3, #N_0
0170 7593A4     197            mov HEX2, #N_2
0173 759282     198            mov HEX1, #N_6
0176 759198     199            mov HEX0, #N_9
0179 120049     200            lcall wait_1_sec
017C 758FF9     201            mov HEX5, #N_1
017F 758EF9     202            mov HEX4, #N_1
0182 759482     203            mov HEX3, #N_6
0185 7593C0     204            mov HEX2, #N_0
0188 7592A4     205            mov HEX1, #N_2
018B 759182     206            mov HEX0, #N_6
018E 120049     207            lcall wait_1_sec
0191 758F92     208            mov HEX5, #N_5
0194 758EF9     209            mov HEX4, #N_1
0197 7594F9     210            mov HEX3, #N_1
019A 759382     211            mov HEX2, #N_6
019D 7592C0     212            mov HEX1, #N_0
01A0 7591A4     213            mov HEX0, #N_2
01A3 120049     214            lcall wait_1_sec
01A6 758F98     215            mov HEX5, #N_9
01A9 758E92     216            mov HEX4, #N_5
01AC 7594F9     217            mov HEX3, #N_1
01AF 7593F9     218            mov HEX2, #N_1
01B2 759282     219            mov HEX1, #N_6
01B5 7591C0     220            mov HEX0, #N_0
01B8 120049     221            lcall wait_1_sec
01BB 758F82     222            mov HEX5, #N_6
01BE 758E98     223            mov HEX4, #N_9
01C1 759492     224            mov HEX3, #N_5
01C4 7593F9     225            mov HEX2, #N_1
01C7 7592F9     226            mov HEX1, #N_1
01CA 759182     227            mov HEX0, #N_6
01CD 120049     228            lcall wait_1_sec
01D0 22         229            ret
01D1            230   
01D1            231   case_100:
01D1            232            ; Make the six least significant digits of your student number blink every second.
01D1            233            ; This should keep going forever until the selection for SW2 down to SW0 is changed. For
01D1            234            ; example: “345678”, “ “, “345678”, “ “, etc. 
01D1 758F98     235            mov HEX5, #N_9
01D4 758E92     236            mov HEX4, #N_5
01D7 7594F9     237            mov HEX3, #N_1
01DA 7593F9     238            mov HEX2, #N_1
01DD 759282     239            mov HEX1, #N_6
01E0 7591C0     240            mov HEX0, #N_0
01E3 120049     241            lcall wait_1_sec
01E6 758FFF     242            mov HEX5, #BLANK
01E9 758EFF     243            mov HEX4, #BLANK
01EC 7594FF     244            mov HEX3, #BLANK
01EF 7593FF     245            mov HEX2, #BLANK
01F2 7592FF     246            mov HEX1, #BLANK
01F5 7591FF     247            mov HEX0, #BLANK
01F8 120049     248            lcall wait_1_sec
01FB 22         249            ret
01FC            250   
01FC            251   case_101:
01FC            252            ; Make the six most significant digits of your student number appear one at time
01FC            253            ; every second, starting with a blank display. This should keep going forever until the
01FC            254            ; selection for SW2 down to SW0 is changed. For example: “ “, “1 ”, “12 ”,
01FC            255            ; “123 ”, “1234 ”, “12345 ”, “123456”, “ “,“1 ”, etc. 
01FC 758FFF     256            mov HEX5, #BLANK
01FF 758EFF     257            mov HEX4, #BLANK
0202 7594FF     258            mov HEX3, #BLANK
0205 7593FF     259            mov HEX2, #BLANK
0208 7592FF     260            mov HEX1, #BLANK
020B 7591FF     261            mov HEX0, #BLANK
020E 120049     262            lcall wait_1_sec
0211 758FA4     263            mov HEX5, #N_2
0214 758EFF     264            mov HEX4, #BLANK
0217 7594FF     265            mov HEX3, #BLANK
021A 7593FF     266            mov HEX2, #BLANK
021D 7592FF     267            mov HEX1, #BLANK
0220 7591FF     268            mov HEX0, #BLANK
0223 120049     269            lcall wait_1_sec
0226 758FA4     270            mov HEX5, #N_2
0229 758E82     271            mov HEX4, #N_6
022C 7594FF     272            mov HEX3, #BLANK
022F 7593FF     273            mov HEX2, #BLANK
0232 7592FF     274            mov HEX1, #BLANK
0235 7591FF     275            mov HEX0, #BLANK
0238 120049     276            lcall wait_1_sec
023B 758FA4     277            mov HEX5, #N_2
023E 758E82     278            mov HEX4, #N_6
0241 759498     279            mov HEX3, #N_9
0244 7593FF     280            mov HEX2, #BLANK
0247 7592FF     281            mov HEX1, #BLANK
024A 7591FF     282            mov HEX0, #BLANK
024D 120049     283            lcall wait_1_sec
0250 758FA4     284            mov HEX5, #N_2
0253 758E82     285            mov HEX4, #N_6
0256 759498     286            mov HEX3, #N_9
0259 759392     287            mov HEX2, #N_5
025C 7592FF     288            mov HEX1, #BLANK
025F 7591FF     289            mov HEX0, #BLANK
0262 120049     290            lcall wait_1_sec
0265 758FA4     291            mov HEX5, #N_2
0268 758E82     292            mov HEX4, #N_6
026B 759498     293            mov HEX3, #N_9
026E 759392     294            mov HEX2, #N_5
0271 7592F9     295            mov HEX1, #N_1
0274 7591FF     296            mov HEX0, #BLANK
0277 120049     297            lcall wait_1_sec
027A 758FA4     298            mov HEX5, #N_2
027D 758E82     299            mov HEX4, #N_6
0280 759498     300            mov HEX3, #N_9
0283 759392     301            mov HEX2, #N_5
0286 7592F9     302            mov HEX1, #N_1
0289 7591F9     303            mov HEX0, #N_1
028C 120049     304            lcall wait_1_sec
028F 22         305            ret
0290            306   
0290            307   case_110:
0290            308            ; Display “HELLO ” for one second, then the six most significant digits of your student
0290            309            ; number for one second (for example “123456”), followed by “CPN312” for one second.
0290            310            ; This should keep going forever until the selection for SW2 down to SW0 is changed.
0290 758F89     311            mov HEX5, #L_H
0293 758E86     312            mov HEX4, #L_E
0296 7594CF     313            mov HEX3, #L_L
0299 7593CF     314            mov HEX2, #L_L
029C 7592C0     315            mov HEX1, #L_O
029F 7591FF     316            mov HEX0, #BLANK
02A2 120049     317            lcall wait_1_sec
02A5 120059     318            lcall case_000
02A8 120049     319            lcall wait_1_sec
02AB 758FC6     320            mov HEX5, #L_C
02AE 758E8C     321            mov HEX4, #L_P
02B1 7594AB     322            mov HEX3, #L_N
02B4 7593B0     323            mov HEX2, #N_3
02B7 7591F9     324            mov HEX0, #N_1
02BA 7592A4     325            mov HEX1, #N_2
02BD 120049     326            lcall wait_1_sec
02C0 22         327            ret
02C1            328            
02C1            329   case_111:
02C1            330            ; Display your student number (or part of it) using a format of your own creation that
02C1            331            ; is different from any of the formats required above. 
02C1            332            ; display in base 18: e4d4ac
02C1 758F86     333            mov HEX5, #L_E
02C4 758E99     334            mov HEX4, #N_4
02C7 7594A1     335            mov HEX3, #L_D
02CA 759399     336            mov HEX2, #N_4
02CD 759288     337            mov HEX1, #L_A
02D0 7591C6     338            mov HEX0, #L_C
02D3 22         339            ret
